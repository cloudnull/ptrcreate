Open Cloud PTR Creater
######################
:date: 2013-10-11 09:51
:tags: Rackspace, PTR, DNS, CloudServer, NextGen. cloud
:category: \*nix


This is a simple script that will create a PTR record for a Next Generation Cloud Server.

The function of the script is such that, you simply need to enter your details and all of the rest is done automagically.  

Use Case : 
  * Create a PTR (Reverse DNS) Record  
  * Update a PTR (Reverse DNS) Record

Application :
  The Script is run with a series of command line arguments.

Function :
  The script will query the Rackspace API for your cloud server, build a PTR record from the provided data and set the record for you.


Example Command:


.. code-block:: bash

    ./ptrcreate.py -U <UserName> -A <Password> -R <Region> -N <ServerName> -D <DomainName>


Please run ``ptrcreate.py --help`` for all available options.


.. code-block:: bash 

    ptrcreate.py create you a New PTR record for your cloud server.

    optional arguments:

    -h, --help           show this help message and exit

    -D , --domain-name   Domain Name for the PTR Record
    --ttl                TTL of DNS Record

    -N , --server-name   The name of your server
    -I , --server-id     The ID of your server

    -U , --user          Your Rackspace Username
    -P , --password      Your Rackspace Password
    -A , --apikey        Your Rackspace API Key
    -T , --token         Your Rackspace Token
    -R , --region        Regions: ['dfw', 'ord', 'iad', 'lon', 'syd']

    --auth-url           Optional Override for the Authentication URL
    --auth-version       Optional Rackspace Authentication Version

    --debug              Enable Debug Mode
    --no-confirm         Skip Record Confirmation.

    -V, --version        show program's version number and exit

    GPLv3 Licensed PTR Create Version 2.0.


You can also export your Rackspace Credentials into environment variables which can help in automating the creation of PTR Records.

Here are All of the Available Environment Variables:


.. code-block:: bash

    OS_USERNAME="Your Rackspace Username"
    OS_PASSWORD="Your Rackspace Password"
    OS_APIKEY="Your Rackspace API Key"
    OS_TOKEN="Your Rackspace Token"
    OS_REGION="Your Rackspace Region"
    OS_AUTH_URL="Optional Override for the Authentication URL"
    OS_AUTH_VERSION="Optional Rackspace Authentication Version"


Want to see the Application in Action? Check out http://asciinema.org/a/5877


License:
  Copyright [2013] [Kevin Carter]

  This software has no warranty, it is provided 'as is'. It is your
  responsibility to validate the behavior of the routines and its accuracy
  using the code provided. Consult the GNU General Public license for further
  details (see GNU General Public License).
  http://www.gnu.org/licenses/gpl.html

